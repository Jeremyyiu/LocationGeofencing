buildscript {
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.1'

    defaultConfig {
        applicationId "io.locative.app"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 26
        versionName "2.3.2"
        multiDexEnabled true
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "versionString", "v" + variant.versionName + " (" + variant.versionCode + ")"
    }

    buildTypes {

        debug {
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = true
        }
    }


    lintOptions {
        abortOnError false
    }

    signingConfigs {
    }

    productFlavors {
    }
}

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

apt {
    arguments {
        // applicationId != package in our case (package has .app)
        //resourcePackageName android.defaultConfig.applicationId
        resourcePackageName "io.locative.app"
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
    }
}

def butterknifeVersion = '8.2.1'
def daggerVersion = '2.8'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.jakewharton:butterknife:$butterknifeVersion"
    apt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    compile "com.google.dagger:dagger:$daggerVersion"
    apt "com.google.dagger:dagger-compiler:$daggerVersion"

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    compile('com.mikepenz:materialdrawer:5.8.1@aar') {
        transitive = true
    }

    compile 'com.android.support:support-v4:25.1.0'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:support-v13:25.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.google.android.gms:play-services-location:9.8.0'
    compile 'com.github.triplet.simpleprovider:simpleprovider:1.1.0'
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.3'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'co.intentservice.android-chat-ui:chat-ui:0.1.1'
    compile 'com.google.firebase:firebase-messaging:9.8.0'
    testCompile 'junit:junit:4.12'
    compile 'com.google.android.gms:play-services-maps:9.8.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jakewharton.retrofit:retrofit1-okhttp3-client:1.0.2'
}

afterEvaluate {
    initFabricPropertiesIfNeeded()
}

def initFabricPropertiesIfNeeded() {
    def propertiesFile = file('fabric.properties')
    if (!propertiesFile.exists()) {
        def commentMessage = "This is autogenerated fabric property from system environment to prevent key to be committed to source control."
        ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
            entry(key: "apiSecret", value: "$System.env.FABRIC_API_SECRET")
            entry(key: "apiKey", value: "$System.env.FABRIC_API_KEY")
        }
    }
}

apply plugin: 'com.google.gms.google-services'